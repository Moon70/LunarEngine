package abyss.lunarengine.tools;

public class Random {
	private static volatile double[] rand;
	private static int index;
	
	private static final String random="2996779bb66b31e03a04a46b857dda4f78b00734dcf33a3f57c29966cf47f3ca69b190710b415ade4877c6703b510411049472bd443f759d2ce45bfe70362c31ba7ddb7500908e7b7e0b6490e5ef749ad4665b1675935ae3b45e66676be7719071eea2a58abc1561b55b4cc7a4b365398ce7cae3f1be083590213538e3cc50d88508c0bceffc4c43fc6c9b42f5e58098bd5c457341dd46ee27894c304f4b1c8cb2db081bbc5f5b4949b9c3552dd61f3d2bb259c2028759308087564915f45565e5c8f6ecf31c25bf798abfb44138cd4854e06dc3373513ac5c1c7e0e7402472be2049c8d7d178102868394e8bdb913703d89c6e6d9ea2ab98a0713329b10f3d42e58c732d7b1acb3fb7a0e030ddf724577dcd9dca724cd9b81b65b650e1231e5382575cb04cdfb20b384b79af61fb0a766bcd4a1350078153d7cb56e4696130fbea67b30c01dd3f3cd4e18fa5c3b578ecd1c6dbe40a706374d01f47c91378c0b7871717eeaabdd25e3a7369b3fd77cff93a7edd238f8096a37f5fac0305c53bcff3be2c73ba67724895a48dcfa5abf50cd9c7a58197359c208009743bb30078bf5d8b5f133696b4bfb3cbaf5c80497a406f6a9ad7260ef882df7a0f9bedd92047081dde046c6e387207f672d8046ceabc7ca4355bc3ef30b904f521c9b06d2b99d523fda53909d4cba45135596644b9d5ded5683e76914adedcceabfaa82785baf0fe63151685dc0e37229785f47127be7d282de2a071c35697482a599552d19002567243cc5a629c3bcbad58a9b8c8e99b181891631c3566cc52d570cebf94380ed95094d3cab9e8900b316e82b092246e4f866e45ec183ba20557a7f93e624582c68b2610e81f2a4d660c366788686288e7da0040c29fbcb8554686336e41ed6dc2c14b0f49ae4385e23fb5395ae4ce97ceb70f3acf71a617a53038155ec109124eb2bbd20738ddc567368db3f21c3eb43ea2143cbe6e2624968cc994466ecd6a21c2581948b0f8d6a1778c93afabacfaab859f17c85cff067eb3a439fce9b4fec8dc1e1a09681e8c9a5d189ed8d7b3f463e9ef6038de1c22f1a500e089519e84f90fe5ab5f421a3f639086735720af65e531d12c070ebbcd1f272e32248d2fbd466f9f66d61bc45d776970f86c4a5060d4fafe0583325c5804b7da1c9f543b684f01876d3ed651d0ec1144d44ab7f63a8d322271e7df4e3ee351f018dcbd7c5e49370c9ed305c7d86bba60e5a19c0ac59d8ba67c0f0ff8ff59366b56d02033abf6e6ab58bb93d2d4501bea018d6c52e07f9feac31bc76538df9a0c6cf00a9b221beaad04dca732b832608324bbc9b327702b99dd16fa89b00c86939beb9b3c29e8d34a6ee47e29bf7eea7959943bf83aeb942cdd810cad4598806eb6158f09dd4a2d333cfedd6076ccea73b19401d3692ed034a036d0bbf1787fab4b71e37fc2ba7c18ec2c332cf94a4b7782fed4db1cdc03d6e7bb6de0e20b5dbc58f8bc046d9998bd811d2dfea16b71c04a62a10f8f13512f0ff4a8c38f6be6b49c6c2c7fa23763670cc1778d6e7f1e9b70a01102ed7fdc73351d0fe932268eb48bd2a6556e022ab6251b839d8d55b738c4270e164467f4ed6df89d0adee30b3c21952b43f3c9c561718772f6e5fdc0be36b65399ece2a0b88ace79ae351230b13b41c2868b8641143bb68a40bc430f3fdf109721bf2fdd6127c5e853c27003a93e31932bf6f2c491a41e6d00b572c90bfea414adf86544aac3e79117b9e8de376e530191096bf64bdacc3c2f31033e6b4b071db7951f6438bb5322b7feb3999e9a6871ff0403168e9bbc296e05ef54d47be85e30ff15fa8b3638075d63ef6b479b49fd6e45e4be0ecfd45db463b6c654ac43136a0fd507206b32eda97f0556aad7ac0cacc053502d1154747e67c174db3097688926695f19466f4577af7e222e8bd965486eb6619d1498ea4056778199bfc6763791918502c38c20e2f9ac30c8c541cbedc2fcc2504491dfee67fce8d83192f691ee628602dcd5c8efa6191f95621bca3a7563bc75439ec0e829e140acffb51d3c79a089c93de2a698849746c024eb5893d921965a6fdd9ee804038cd89b92f2bc068bb6d4c9f50fb073383f729c8bebf143f488e52c5e0046c1a9f616180cf50258b10b3c569fc80809c5ecc61f4eb80adaa57a4ced18b3132eada55ec6fdeafe522ee8cbaaa02586f8908959fafd34dbb12e8c2a282aa3dd48ba73527aff3c41259e0574808aaa19bbe078cd784f08d8de961de93a1438a62462bbc33cd15d961cae1fd3ccfc8fa2c2dbfcdd92b476ab356d8351be8ccfd34636e4f5a568102fa1b6b76a69d0e9b07ab0df2773d4bf3ecf93beb13d1993063fe1baf4db2a95b7ae5c08fa448a29c65df24e3e133007448ecc3f9a39b96de7d1975f4a13a7c8b3dd675f2780af088aa77abf244a063199207994b7796379481ea9bbe9697ec7bea0e466bd2eec2267e9a162db0aa0acafb5fc82c2dafae9c177400af1359ae5a37c8186d6775908f259a45f633c1094d010c67eb03395f2d0653261fe5d43fd9f0384cdabe85167618e35fd93ba2199f942703bfcbf794d9efd3a01444372caa46b0490a3e912ab6de32eea43887fb93831150f11765723b433f48778fe9923d50ff4a0e8102ce2521073bba79a919b722f2113eae452de67d76be8b4c23e3bfd717673be6e684a00953eeaa4ef76f67307c488039687d9198b825a46ec8ed595deae4ea5dd3e455d56ee4096810ae3706ee9f9634b94e8acac11d1bce811bac6793bc867a18705aaf4750837a7d9d88f65415841f84ba5f7b";
	
	static{
		createRandomTable();
	}
	
	public static void main(String[] args) {
		try {
			createRandomTable();
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public static double random() {
		index=++index%rand.length;
		return rand[index];
	}
	
	private static void createRandomTable() {
		int length=random.length()>>1;
		rand=new double[length];
		for(int i=0;i<length;i++) {
			String s=random.substring(i*2,i*2+2);
			double r=Integer.parseInt(s, 16);
			rand[i]=r/256.0;
		}
	}
	
}
